---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: moac
  namespace: mayastor
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: moac
rules:
  # must create mayastor crd if it doesn't exist
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create"]
  # must read csi plugin info
- apiGroups: ["storage.k8s.io"]
  resources: ["csinodes"]
  verbs: ["get", "list", "watch"]
  # must read mayastor pools info
- apiGroups: ["openebs.io"]
  resources: ["mayastorpools"]
  verbs: ["get", "list", "watch", "update"]
  # must update mayastor pools status
- apiGroups: ["openebs.io"]
  resources: ["mayastorpools/status"]
  verbs: ["update"]

  # external provisioner & attacher
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch", "update", "create", "delete"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]

  # external provisioner
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["list", "watch", "create", "update", "patch"]
- apiGroups: ["snapshot.storage.k8s.io"]
  resources: ["volumesnapshots"]
  verbs: ["get", "list"]
- apiGroups: ["snapshot.storage.k8s.io"]
  resources: ["volumesnapshotcontents"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]

  # external attacher
- apiGroups: ["storage.k8s.io"]
  resources: ["volumeattachments"]
  verbs: ["get", "list", "watch", "update"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: moac
subjects:
- kind: ServiceAccount
  name: moac
  namespace: mayastor
roleRef:
  kind: ClusterRole
  name: moac
  apiGroup: rbac.authorization.k8s.io
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: moac
  namespace: mayastor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: moac
  template:
    metadata:
      labels:
        app: moac
    spec:
      serviceAccount: moac
      containers:
        - name: csi-provisioner
          image: quay.io/k8scsi/csi-provisioner:v1.1.1
          args:
            - "--v=2"
            - "--csi-address=$(ADDRESS)"
            - "--feature-gates=Topology=true"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/

        - name: csi-attacher
          image: quay.io/k8scsi/csi-attacher:v1.1.1
          args:
            - "--v=2"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/

        - name: moac
          image: mayadata/moac:latest
          imagePullPolicy: Always
          args:
            - "--csi-address=$(CSI_ENDPOINT)"
            - "--port=4000"
            - "-v"
          env:
            - name: CSI_ENDPOINT
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          ports:
            - containerPort: 4000
              protocol: TCP
              name: "rest-api"
      volumes:
        - name: socket-dir
          emptyDir:
---
kind: Service
apiVersion: v1
metadata:
  name: moac
  namespace: mayastor
spec:
  selector:
    app: moac
  ports:
  - protocol: TCP
    port: 4000
    targetPort: 4000
